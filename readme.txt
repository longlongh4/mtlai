##########################################################

目标：Mtlai的目标是成为一个云计算平台

##########################################################

服务器端：利用SOA实现服务扩展，目前采用Tuscany框架进行实现，项目刚刚启动，仅完成SCA部分

客户端：借鉴Eclipse的优点，强化插件系统，真正实现自由扩展。有点类似小型的网络操作系统，本身只提供即时通讯，多媒体解码，插件管理器，网络连接器，持久数据层接口，资源管理器，服务中间件等功能，剩下的具体工作全部由插件来扩充，插件管理器负责插件的装载与资源回收，持久数据层由内存数据库和XML实现，通过Model View实现同步显示，视图层用QML进行控制。

###########################################################

编译说明:
1.qmake
2.make
3.将qml文件夹放在程序所在目录，否则mtlai无法初始化控制器的界面(如果使用Qt creator，请把qml文件夹放在release和debug所在的目录，也就是应用程序上一层的目录)
4.在程序所在文件夹创建plugins文件夹，将各种插件用力的丢进去（爽！）
5.启动Mtlai，他将自动搜索plugins下的插件，测试合法性，将可用插件存入数据库，通知qml进行显示

############################################################

如何开发插件：
请参考plugins目录下的源代码

############################################################

文件夹结构说明
./src		Mtlai平台的源文件
./release	编译好的二进制文件
./plugins	Mtlai的插件例子
./libs		Mtlai的中间层库，目前只有一个sina微博访问库，而且尚未完成，但是整体框架已经写出来了，而且已经实现了部分功能，开发难度不大
./src/chat	即时通讯组件，采用xmpp协议，通过jingle进行功能扩展，实现P2P文件交换，音视频通信
./src/common	全局变量和一些固定信息枚举变量
./src/control	整个Mtlai平台的逻辑控制中心
./src/multimedia Mtlai的多媒体处理组件，目前打算用ffmpeg做，不知大家有没有更好的方案推荐
./src/network	网络控制中心，主要实现cookie共享和代理设置
./src/plugins	Mtlai的插件管理器，是系统的核心组件
./src/ui	Mtlai的界面渲染单元
./src/qml	帮助实现Mtlai的软件界面
./src/Resources	Mtlai的资源文件夹
./src/win	Windows特性化文件夹

#############################################################

本人水平有限，编写的代码难免有各种漏洞，架构设计也不一定合理，希望各位仁兄多多指点，欢迎大家加入Mtlai的开发~~

#############################################################